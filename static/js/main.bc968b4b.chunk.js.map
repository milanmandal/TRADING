{"version":3,"sources":["components/nav.js","Firebase.js","components/addstock.js","components/timer.js","components/graph.js","components/trade.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","to","Component","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","CreateStock","onChange","e","state","target","name","value","setState","onSubmit","preventDefault","prompt","title","RETURN","ref","add","then","docRef","props","history","push","catch","error","console","window","alert","firestore","collection","this","class","for","type","placeholder","Timer","time","seconds","timer","startTimer","bind","countDown","secs","divisor_for_minutes","divisor_for_seconds","Math","floor","ceil","timeLeftVar","secondsToTime","setInterval","clearInterval","m","s","Graph","lab","dat","i","random","labels","datasets","label","data","borderColor","backgroundColor","pointBackgroundColor","borderWidth","fill","lineTension","options","display","fontColor","text","cap","fontSize","trade","onCollectionUpdate","querySnapshot","stocks","forEach","doc","key","id","orderBy","unsubscribe","selectedOption","AMOUNT","invest","CAPITAL","isSellButton","isInvestButton","check","ch","flag","graph","onSell","onChangeInvest","onLaunchClicked","formSubmit","getStock","onCheck","onSnapshot","get","exists","stock","log","event","confirm","setTimeout","sm","md","lg","xl","map","onClick","disabled","App","path","exact","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.bc968b4b.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n//var user = prompt('Enter 0000 for trading \\n Enter Pin for Admin purpose')\r\n\r\nexport default class Navbar extends Component {\r\n    render() {\r\n      \r\n     \r\n            return (\r\n                <div >\r\n                    <nav className=\"navbar navbar-dark bg-dark navbar-expand-lg \">\r\n                        <Link to=\"nil\" className=\"navbar-brand \">TEC CLUB</Link>\r\n                        <div>\r\n                        <ul className=\"navbar-nav \">\r\n                        <li className=\"navbar-item\">\r\n                        <Link to=\"/\" className=\"nav-link right\">Stock Trade</Link>\r\n                        </li>\r\n                        <li className=\"navbar-item\">\r\n                        <Link to=\"/admin\" className=\"nav-link right\">Admin</Link>\r\n                        </li>\r\n                       \r\n                        </ul>\r\n                      \r\n                        </div>\r\n                    </nav>\r\n                </div>                \r\n            )\r\n        \r\n    }\r\n}\r\n","  \r\nimport firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyCEnbaiBpyuKxQuCscAh9SfgX414EzjvFI\",\r\n  authDomain: \"stock-trade-963bf.firebaseapp.com\",\r\n  databaseURL: \"https://stock-trade-963bf.firebaseio.com/\",\r\n  projectId: \"stock-trade-963bf\",\r\n  storageBucket: \"stock-trade-963bf.appspot.com\",\r\n  messagingSenderId: \"904285018709\",\r\n  appId: \"1:904285018709:web:9a76419fc1cfa8997852dc\",\r\n  measurementId: \"G-YKH08PQBPQ\"\r\n};\r\n\r\n  firebase.initializeApp(firebaseConfig);\r\n\r\n\r\n\r\n  export default firebase","import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Link } from 'react-router-dom';\r\nimport firebase from '../Firebase';\r\n\r\n\r\nexport default class CreateStock extends Component {\r\n\r\n  constructor() {\r\n    super();\r\n    this.ref = firebase.firestore().collection('stocks');\r\n    this.state = {\r\n      title: '',\r\n      RETURN:0,\r\n    };\r\n  }\r\n  onChange = (e) => {\r\n    const state = this.state\r\n    state[e.target.name] = e.target.value;\r\n    this.setState(state);\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    var user=prompt('enter admin id');\r\n\r\n    if(user=='1324')\r\n\r\n    {\r\n    const { title, RETURN } = this.state;\r\n\r\n    this.ref.add({\r\n      title,\r\n      RETURN,\r\n    }).then((docRef) => {\r\n      this.setState({\r\n        title: '',\r\n        RETURN:0,\r\n      });\r\n      this.props.history.push(\"/\")\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error adding document: \", error);\r\n    });\r\n    }\r\n    \r\n\r\n   else \r\n    {\r\n      window.alert(\"YOU DONT HAVE ACCESSS\")\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { title, RETURN } = this.state;\r\n    return (\r\n      <div class=\"container\">\r\n        <div class=\"panel panel-default\">\r\n          <div class=\"panel-heading\">\r\n            <h3 class=\"panel-title\">\r\n              ADD STOCK\r\n            </h3>\r\n          </div>\r\n          <div class=\"panel-body\">\r\n            <form onSubmit={this.onSubmit}>\r\n              <div class=\"form-group\">\r\n                <label for=\"title\">Title:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"title\" value={title} onChange={this.onChange} placeholder=\"NAME\" />\r\n              </div>\r\n   \r\n              <div class=\"form-group\">\r\n                <label for=\"author\">RETURN %:</label>\r\n                <input type=\"text\" class=\"form-control\" name=\"RETURN\" value={RETURN} onChange={this.onChange} placeholder=\"%\" />\r\n              </div>\r\n              <button type=\"submit\" class=\"btn btn-success\">Submit</button>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n    }\r\n  }","import React ,{Component} from 'react';\r\n\r\n\r\nexport default class Timer extends Component {\r\n    constructor() {\r\n      super();\r\n      this.state = { time: {}, seconds: 90 };\r\n      this.timer = 0;\r\n      this.startTimer = this.startTimer.bind(this);\r\n      this.countDown = this.countDown.bind(this);\r\n    }\r\n  \r\n    secondsToTime(secs){\r\n      let hours = Math.floor(secs / (60 * 60));\r\n  \r\n      let divisor_for_minutes = secs % (60 * 60);\r\n      let minutes = Math.floor(divisor_for_minutes / 60);\r\n  \r\n      let divisor_for_seconds = divisor_for_minutes % 60;\r\n      let seconds = Math.ceil(divisor_for_seconds);\r\n  \r\n      let obj = {\r\n        \"h\": hours,\r\n        \"m\": minutes,\r\n        \"s\": seconds\r\n      };\r\n      return obj;\r\n    }\r\n  \r\n    componentDidMount() {\r\n      let timeLeftVar = this.secondsToTime(this.state.seconds);\r\n      this.setState({ time: timeLeftVar });\r\n    }\r\n  \r\n    startTimer() {\r\n      if (this.timer == 0 && this.state.seconds > 0) {\r\n        this.timer = setInterval(this.countDown, 1000);\r\n      }\r\n    }\r\n  \r\n    countDown() {\r\n      // Remove one second, set state so a re-render happens.\r\n      let seconds = this.state.seconds - 1;\r\n      this.setState({\r\n        time: this.secondsToTime(seconds),\r\n        seconds: seconds,\r\n      });\r\n      \r\n      // Check if we're at zero.\r\n      if (seconds == 0) { \r\n        clearInterval(this.timer);\r\n      }\r\n    }\r\n  \r\n    render() {\r\n      return(\r\n        <div className=\"m-2\" >\r\n        {this.startTimer()}\r\n        {this.state.time.m}m : {this.state.time.s}s\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  ","import React, {Component} from 'react';\r\nimport {Line} from 'react-chartjs-2';\r\nimport './layout.css'\r\n\r\n\r\n\r\n\r\n\r\nfunction Graph (props) {\r\n  let lab = [];\r\n  let dat = [];\r\n  for(let i=0; i<10; i++){\r\n  lab[i] = i+1;\r\n  dat[i] = Math.random()*200\r\n}\r\n  const state = {\r\n      labels:lab,\r\n      datasets: [\r\n          {\r\n              \r\n              label: 'Price',\r\n              data: dat,\r\n              borderColor: ['white'],\r\n              backgroundColor: ['blue'],\r\n              pointBackgroundColor: 'green',\r\n              borderWidth: 2,\r\n              fill: true,\r\n              lineTension: 0.55,\r\n          }\r\n      ]\r\n      \r\n  }\r\n\r\n  \r\n  \r\n  return( \r\n        \r\n            <Line \r\n            \r\n            data={state}\r\n            options={{\r\n            title:{\r\n              display:true,\r\n              fontColor:'white',\r\n              text:`CAPITAL provided: ${props.cap} by ${props.name}`,\r\n              fontSize:20\r\n            }\r\n          }}  />\r\n          \r\n          \r\n      \r\n\r\n          \r\n  )\r\n}\r\n\r\nexport default Graph;\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport axios from 'axios';\r\nimport Timer from './timer';\r\nimport Graph from './graph'\r\nimport firebase from '../Firebase';\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport ResponsiveContainer from \"react-responsive-widget\";\r\nimport {Link} from 'react-router-dom';\r\nimport './layout.css';\r\n\r\n\r\n\r\n\r\nexport default class trade extends Component {\r\n\r\n  \r\n    constructor() {\r\n      \r\n        super();\r\n        this.ref = firebase.firestore().collection('stocks').orderBy('title','asc');\r\n        this.unsubscribe = null;\r\n        this.state = {\r\n            \r\n          selectedOption:'none',\r\n          RETURN:0,\r\n          AMOUNT:0,\r\n          invest:0,\r\n          CAPITAL:10000,\r\n          isSellButton: false,\r\n          isInvestButton: false,\r\n          check:1,\r\n          ch:true,\r\n          flag:false,\r\n          graph:true,\r\n          stocks:[],\r\n         \r\n\r\n          \r\n         }\r\n\r\n         this.onSell = this.onSell.bind(this);\r\n         this.onChangeInvest = this.onChangeInvest.bind(this);\r\n         this.onLaunchClicked = this.onLaunchClicked.bind(this);\r\n         this.formSubmit=this.formSubmit.bind(this);\r\n         this.getStock = this.getStock.bind(this);\r\n         this.graph = this.graph.bind(this);\r\n         this.onCheck = this.onCheck.bind(this);\r\n\r\n      }\r\n       \r\n\r\n      onCollectionUpdate = (querySnapshot) => {\r\n        const stocks = [];\r\n        querySnapshot.forEach((doc) => {\r\n          const { title, RETURN } = doc.data();\r\n          stocks.push({\r\n            key: doc.id,\r\n            doc, // DocumentSnapshot\r\n            title,\r\n            RETURN,\r\n          });\r\n        });\r\n        this.setState({\r\n          stocks\r\n       });\r\n      }\r\n\r\n\r\n\r\n      componentDidMount() {\r\n        this.unsubscribe = this.ref.onSnapshot(this.onCollectionUpdate);\r\n\r\n      }\r\n\r\n\r\n    getStock(id)\r\n    {\r\n      if(this.state.ch)\r\n      {\r\n        this.setState({graph:true})\r\n      }\r\n      const ref = firebase.firestore().collection('stocks').doc(id);\r\n      ref.get().then((doc) => {\r\n        if (doc.exists) {\r\n          const stock = doc.data();\r\n          this.setState({\r\n            key: doc.id,\r\n            selectedOption: stock.title,\r\n            RETURN:stock.RETURN,\r\n          });\r\n        } else {\r\n          console.log(\"No such document!\");\r\n        }\r\n      });\r\n    }\r\n\r\n    graph()\r\n    {\r\n      this.setState({graph:false})\r\n    }\r\n\r\n    onCheck()\r\n    {\r\n      this.setState({graph:true})\r\n    }\r\n\r\n\r\n    \r\n\r\n  \r\n      \r\n    // returns the value after sell is click - return amout and total amount\r\n    async onSell(event)\r\n    {\r\n      if((this.state.selectedOption)==\"\" || (this.state.invest)==0)\r\n      {\r\n        window.alert(\"Select a stock and invest to sell\")\r\n      }\r\n      else {\r\n      \r\n            if(this.state.check==1)\r\n            {\r\n            await this.setState({\r\n              AMOUNT:(this.state.RETURN)*(this.state.invest),\r\n              CAPITAL: (this.state.CAPITAL)+(this.state.AMOUNT),\r\n              check:2\r\n            })\r\n            }\r\n            if(window.confirm('you are about to sell'))\r\n              {\r\n              await this.setState({\r\n              AMOUNT:(this.state.RETURN)*(this.state.invest),\r\n              CAPITAL: (this.state.CAPITAL)+(this.state.AMOUNT),\r\n              isSellButton:true,\r\n              \r\n            })\r\n            console.log('hell',(this.state.AMOUNT),(this.state.invest),(this.state.RETURN))\r\n            }\r\n          }\r\n     }\r\n\r\n\r\n    // to inistialise investment on inputnnn\r\n    onChangeInvest(event)\r\n    {\r\n      this.setState({\r\n        invest:event.target.value\r\n        });\r\n    }\r\n\r\n   \r\n\r\n    formSubmit(event)\r\n    {\r\n      event.preventDefault();\r\n      console.log(this.state.selectedOption)\r\n    }\r\n    \r\n    \r\n    \r\n    // submits to disble the sell amount for specific time - submits after fix investment\r\n   onLaunchClicked (event) \r\n   {\r\n    \r\n     event.preventDefault();\r\n      if(this.state.selectedOption==\"none\")\r\n      {\r\n        window.alert(\"Select a stock to invest\")\r\n      }\r\n\r\n      else {\r\n          //to check the investment amount\r\n          if((this.state.invest)>1 && (this.state.invest)<=(this.state.CAPITAL))\r\n          {\r\n            //to confirm investemnt\r\n            if(window.confirm('Investment can be made only once, click OK to proceed'))\r\n            {\r\n              this.setState({\r\n                  isSellButton: true,\r\n                  CAPITAL:(this.state.CAPITAL)-(this.state.invest),\r\n                  isInvestButton:true ,\r\n                  ch:false,\r\n                  flag:true   \r\n                });\r\n              // timer \r\n              setTimeout(() => this.setState({ isSellButton: false ,flag:false}), 90000);\r\n            }\r\n          }\r\n\r\n          // alert for invalid input\r\n          else{\r\n            window.alert(\"Amount cannot be 0 or greater than the CAPITAL provided\")\r\n            this.setState({invest:0});\r\n          }\r\n      }\r\n   }\r\n\r\n\r\n\r\n   render()\r\n   {\r\n       return(\r\n        <ResponsiveContainer sm=\"600\" md=\"900\" lg=\"900\" xl=\"1300\">\r\n            <form onSubmit={this.formSubmit}>\r\n            <div className=\"app-row \">\r\n              {(this.state.graph) ?\r\n              \r\n                <div >\r\n            <div className=\"app-row\">\r\n                <div className=\"stocklist\">\r\n                  <div className=\"container\">\r\n                    <h3>STOCK LIST</h3>\r\n                    {this.state.stocks.map(stock =>\r\n                  \r\n                    <Link className=\"app-col-5 app-col-lg-2 stock-card text-white\" onClick={()=>{this.getStock(stock.key)}}>{stock.title}</Link>\r\n                    \r\n                  \r\n                )}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n          \r\n                  <div className=\"container-md\">\r\n                <button disabled={this.state.isInvestButton} className=\"search-button\" type=\"submit\" onClick={this.graph} >\r\n                      SELECT STOCK\r\n                      </button>\r\n                      <div className=\"card-graph\">\r\n                    <Graph cap={this.state.CAPITAL} name={this.state.selectedOption}/>\r\n                    </div>\r\n                </div>\r\n                \r\n                </div>:\r\n\r\n                        <div className=\" \">\r\n                       \r\n                            <div className=\"container\">\r\n                            <h4 className =\"text-white m-2\">STOCK INVESTMENT</h4>\r\n                            <input className=\"input1 ml-1 mt-2\" type=\"text\" placeholder=\"Enter the investment amount\" onChange={this.onChangeInvest} ></input>\r\n                              <button disabled={this.state.isInvestButton} className=\"btn btn-danger  m-2\" type=\"submit\" onClick={this.onLaunchClicked} >\r\n                              Fix investment\r\n                              </button>\r\n                              <button disabled={this.state.isInvestButton} className=\"btn btn-primary m-2\" type=\"submit\" onClick={this.onCheck} >\r\n                              Select Stock\r\n                              </button>\r\n                            \r\n\r\n                                <p  className=\"card-head font-weight-bold\">SELL YOUR STOCK TO GET RETURNS</p>\r\n                                <form onSubmit={this.onSell}>\r\n                                <div className=\"card-calc ml-1\">\r\n                                  <p>Selected STOCK is : <b>{this.state.selectedOption} </b> </p>\r\n                                  <p>Capital by {this.state.selectedOption}: 10000/-</p>\r\n                                  <p>Active Amount: {this.state.CAPITAL}</p>\r\n                                \r\n                                  <div className=\"time-card\">\r\n                                  {(this.state.flag)?\r\n                                  <div className=\"m-2\">\r\n                                    Sell will be enabled after :<Timer/>\r\n                                    </div>:<div></div>}\r\n                                  </div>\r\n                                  <button disabled={this.state.isSellButton} className=\" float-left btn bg-success  m-2\" type=\"submit\">\r\n                                    Sell\r\n                                  </button>\r\n                                </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n\r\n                \r\n\r\n                    }\r\n            </div>\r\n            </form>\r\n        </ResponsiveContainer>\r\n          \r\n       )\r\n   }\r\n}","import React, { Component } from 'react'\nimport Navbar from './components/nav'\nimport CreateStock from './components/addstock'\nimport trade from './components/trade'\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Route} from \"react-router-dom\";\n\nfunction App()\n{\n\n\n  \n  return(\n    \n    <Router>\n      \n      <Navbar/>\n      \n      <div>\n       \n      \n       <Route path=\"/\" exact component={trade} />\n       <Route path=\"/admin\" component={CreateStock} />\n       \n      </div>\n      \n    </Router>\n  )\n    \n\n \n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}